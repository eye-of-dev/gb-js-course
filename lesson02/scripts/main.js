"use strict"
/**
 	1 Объясните почему код даёт именно такие результаты?
*/
//пример 1
let a = 1,
    b = 1,
    c, d;
c = ++a;
alert(c); // ответ: 2
/**
	Выводы: операция ++ перед переменной увеличивает значение переменной - a,
	затем оно(значение) присваевается в переменную - c
*/

//пример 2
d = b++;
alert(d); //ответ: 1
/**
	Выводы: операция ++ после переменной увеличивает значение переменной - b,
	уже после того как значение b было присвоено переменной - d
*/

//пример 3
c = 2 + ++a;
alert(c); //ответ: 5
/**
	Выводы: 
	тут значение переменной a = 2, т.к. мы его увеличили в "Пример 1"
	операция ++ перед переменной увеличивает значение переменной - a,
	затем выполняется операция сложения двух чисел
*/

//пример 4
d = 2 + b++;
alert(d); //ответ: 4
/**
	Выводы: 
	тут значение переменной b = 2, т.к. мы его увеличили в "Пример 2"
	операция ++ после переменной увеличивает значение переменной - b,
	уже после того выполнится операция сложения двух чисел
*/

alert(a); //3
/**
	Выводы: 
	тут значение переменной a = 3, т.к. мы его увеличили в "Пример 1"
	и в "Пример 3"
*/

alert(b); //3
/**
	Выводы: 
	тут значение переменной b = 3, т.к. мы его увеличили в "Пример 2"
	и в "Пример 4"
*/





/**
	2 Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
	(описать последовательность действий).
*/

let a1 = 2;
let x = 1 + (a1 *= 2);
console.log(a1);
console.log(x);
/**
	Результат:
	a1 = 4;
	x = 5;
	
	Порядок вычесления значения x
	1) переменная a1 увеличивается в выражении, где вычисляется значение переменной x,
		а именно тут "*=" - это умножает исходное значение на 2(в нашем случае)
	2) операция сложения 1 + значение(новое) из переменной a1 
	3) операция присвоения значения или "="
*/





/**
	3 Объявить две переменные a и b и задать им целочисленные произвольные начальные
	значения.
	Затем написать скрипт, который работает по следующему принципу:
	- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
	- если а и b отрицательные, вывести их произведение;
	- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
	Подсказка, чтобы сделать последний пункт можно также попробовать погуглить по запросу
	«получить знак числа javascript»
*/

let a2 = 5;
let b2 = 8;
let result;
if (a2 >= 0 && b2 >= 0) {
    result = a2 - b2;
} else if (a2 < 0 && b2 < 0) {
    result = a2 * b2;
} else if ((a2 < 0 && b2 >= 0) || (a2 >= 0 && b2 < 0)) {
    result = a2 + b2;
}

console.log(result)





/**
	4 Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
	параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их
	и возвращать результат. Обязательно использовать оператор return.
*/

/**
 * Сумма двух чисел
 *
 * @param      number  a       Первое число
 * @param      number  b       Второе число
 * @return     number          Возвращает результат операции
 */
function add(a, b) {
    return a + b;
}

/**
 * Разность двух чисел
 *
 * @param      number  a       Первое число
 * @param      number  b       Второе число
 * @return     number          Возвращает результат операции
 */
function sub(a, b) {
    return a - b;
}

/**
 * Частное двух чисел
 *
 * @param      number  a       Первое число
 * @param      number  b       Второе число
 * @return     number          Возвращает результат операции
 */
function div(a, b) {
    return a / b;
}

/**
 * Произведение двух чисел
 *
 * @param      number  a       Первое число
 * @param      number  b       Второе число
 * @return     number          Возвращает результат операции
 */
function mul(a, b) {
    return a * b;
}

console.log(add(3, 5));
console.log(sub(3, 5));
console.log(div(3, 5));
console.log(mul(3, 5));





/**
 * 5 Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
	где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
	переданного значения операции (использовать switch) выполнить одну из арифметических
	операций (использовать функции из задания 4) и вернуть полученное значение.
 */

/**
 * Функция калькулятор
 *
 * @param      number  arg1       Первое число
 * @param      number  arg2       Второе число
 * @param      string  sign       Знак арифметической операции
 * @return     number||undefined  Возвращает результат операции
 */
function mathOperation(arg1, arg2, operation) {
    let result;
    switch (operation) {
        case '+':
            result = arg1 + arg2;
            break;
        case '-':
            result = arg1 - arg2;
            break;
        case '/':
            result = arg1 / arg2;
            break;
        case '*':
            result = arg1 * arg2;
            break;
        default:
            result = undefined;
            break;
    }

    return result;
}

console.log(mathOperation(3, 5, '+'));
console.log(mathOperation(3, 5, '-'));
console.log(mathOperation(3, 5, '/'));
console.log(mathOperation(3, 5, '*'));
console.log(mathOperation(3, 5, 'fsdkjfsdh'));